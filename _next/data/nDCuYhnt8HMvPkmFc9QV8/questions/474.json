{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/474","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/474/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/474/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/474/events","html_url":"https://github.com/hankliu62/interview/issues/474","id":2129731075,"node_id":"I_kwDOLNphd85-8R4D","number":474,"title":"讲一下你了解哪些前端模块化规范？","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468011,"node_id":"LA_kwDOLNphd88AAAABhkJu6w","url":"https://api.github.com/repos/hankliu62/interview/labels/engine","name":"engine","color":"1d76db","default":false,"description":"工程化相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T09:33:23Z","updated_at":"2024-02-12T09:33:24Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"1. ES6 模块化：ES6 模块化是一种 JavaScript 模块化规范，是 ES6 中新增的语言特性。在 ES6 中，每个模块都是一个独立的文件，并通过 export 导出模块，通过 import 导入模块。例如：\r\n\r\n``` javascript\r\n// 导出模块\r\nexport var foo = 'bar';\r\nexport function add(x, y) {\r\n  return x + y;\r\n}\r\n\r\n// 导入模块\r\nimport {foo, add} from 'module';\r\nconsole.log(foo); // 'bar'\r\nconsole.log(add(1, 2)); // 3\r\n```\r\n\r\n2. CommonJS：Node.js的模块化规范。在CommonJS中，每个模块都是一个单独的文件，并通过module.exports导出模块，通过require()导入模块。例如：\r\n\r\n``` javascript\r\n// 导出模块\r\nmodule.exports = {\r\n  foo: 'bar',\r\n  add: function(x, y) {\r\n    return x + y;\r\n  }\r\n};\r\n\r\n// 导入模块\r\nvar module = require('module');\r\nconsole.log(module.foo); // 'bar'\r\nconsole.log(module.add(1, 2)); // 3\r\n```\r\n\r\n3. AMD和CMD：以前老的模块化规范，现在很少用了。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/474/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}