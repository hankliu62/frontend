{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/535","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/535/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/535/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/535/events","html_url":"https://github.com/hankliu62/interview/issues/535","id":2141248584,"node_id":"I_kwDOLNphd85_oNxI","number":535,"title":"合并两个有序链表(21)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:01:38Z","updated_at":"2024-02-19T00:01:38Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"这个题简而言之就是看图找规律，就是合并为升序链表，具体题目如下：\r\n\r\n我们先看一下题目：\r\n\r\n将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。\r\n\r\n![image](https://github.com/hankliu62/hankliu62.github.com/assets/8088864/767fa76e-9cc1-4e16-be10-84e9d65c19ee)\r\n\r\n```\r\n示例 1：\r\n\r\n输入：l1 = [1,2,4], l2 = [1,3,4]\r\n输出：[1,1,2,3,4,4]\r\n示例 2：\r\n\r\n输入：l1 = [], l2 = []\r\n输出：[]\r\n示例 3：\r\n\r\n输入：l1 = [], l2 = [0]\r\n输出：[0]\r\n\r\n\r\n提示：\r\n\r\n两个链表的节点数目范围是 [0, 50]\r\n-100 <= Node.val <= 100\r\nl1 和 l2 均按 非递减顺序 排列\r\n```\r\n\r\n**思路**:\r\n\r\n那就挨个遍历，按顺序谁小拼接谁，接着进入下一轮循环，看代码更清晰一些：\r\n\r\n```\r\n// 链表定义函数\r\nfunction ListNode(val, next) {\r\n    this.val = (val===undefined ? 0 : val)\r\n    this.next = (next===undefined ? null : next)\r\n}\r\n\r\nvar mergeTwoLists = function(l1, l2) {\r\n  const dummpy = node = new ListNode();\r\n  while(l1 && l2){\r\n      if(l1.val >= l2.val){\r\n          node.next = l2;\r\n          node = node.next;\r\n          l2 = l2.next;\r\n      } else {\r\n          node.next = l1;\r\n          node = node.next;\r\n          l1 = l1.next;\r\n      }\r\n  }\r\n  node.next = l1 || l2;\r\n  return dummpy.next;\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/535/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}