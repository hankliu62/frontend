{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/292","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/292/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/292/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/292/events","html_url":"https://github.com/hankliu62/interview/issues/292","id":2129528495,"node_id":"I_kwDOLNphd85-7gav","number":292,"title":"揭秘React形成合成事件的过程","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468371,"node_id":"LA_kwDOLNphd88AAAABhkJwUw","url":"https://api.github.com/repos/hankliu62/interview/labels/react","name":"react","color":"0052CC","default":false,"description":"React相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T06:57:41Z","updated_at":"2024-03-08T05:29:36Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"React的事件处理使用合成事件(SyntheticEvent)，不是原生事件。\r\n\r\n### 1. 合成事件的异步访问\r\n\r\n合适事件为了节约性能，使用对象池。当一个合成事件对象被使用完毕，即调用该对象的同步代码执行完毕，该对象会被再次利用。\r\n其属性会被重置为null。所以异步访问合适事件的属性，是无效的。\r\n\r\n解决方法有两种：\r\n\r\n#### 1.1 用变量记录事件属性值\r\n\r\n用变量记录合成事件的属性值，在异步程序中访问，就没有任何问题了。\r\n\r\n``` js\r\nfunction onClick(event) {\r\n  console.log(event); // => nullified object.\r\n  console.log(event.type); // => \"click\"\r\n  const eventType = event.type; // => \"click\"\r\n\r\n  setTimeout(function() {\r\n    console.log(event.type); // => null\r\n    console.log(eventType); // => \"click\"\r\n  }, 0);\r\n}\r\n```\r\n\r\n#### 1.2 用e.persist()方法\r\n\r\ne.persist()方法，会将当前的合成事件对象，从对象池中移除，就不会回收该对象了。对象可以被异步程序访问到。\r\n\r\n### 2. 合成事件阻止冒泡\r\n\r\n#### 2.1 e.stopPropagation\r\n\r\n只能阻止合成事件间冒泡，即下层的合成事件，不会冒泡到上层的合成事件。事件本身还都是在document上执行。最多只能阻止document事件不能再冒泡到window上。\r\n\r\n#### 2.2 e.nativeEvent.stopImmediatePropagation\r\n\r\n能阻止合成事件不会冒泡到document上。\r\n\r\n可以实现点击空白处关闭菜单的功能：\r\n\r\n- 在菜单打开的一刻，在document上动态注册事件，用来关闭菜单。\r\n- 点击菜单内部，由于不冒泡，会正常执行菜单点击。\r\n- 点击菜单外部，执行document上事件，关闭菜单。\r\n- 在菜单关闭的一刻，在document上移除该事件，这样就不会重复执行该事件，浪费性能。\r\n\r\n也可以在window上注册事件，这样可以避开document。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/292/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### 1. 合成事件的异步访问","#### 1.1 用变量记录事件属性值","#### 1.2 用e.persist()方法","### 2. 合成事件阻止冒泡","#### 2.1 e.stopPropagation","#### 2.2 e.nativeEvent.stopImmediatePropagation"]},"__N_SSG":true}