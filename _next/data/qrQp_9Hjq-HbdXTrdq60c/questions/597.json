{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/597","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/597/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/597/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/597/events","html_url":"https://github.com/hankliu62/interview/issues/597","id":2247236923,"node_id":"I_kwDOLNphd86F8h07","number":597,"title":"TypeScript中的this有什么需要注意的","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468429,"node_id":"LA_kwDOLNphd88AAAABhkJwjQ","url":"https://api.github.com/repos/hankliu62/interview/labels/typescript","name":"typescript","color":"487E6B","default":false,"description":"Typescript相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/hankliu62/interview/milestones/2","html_url":"https://github.com/hankliu62/interview/milestone/2","labels_url":"https://api.github.com/repos/hankliu62/interview/milestones/2/labels","id":10707684,"node_id":"MI_kwDOLNphd84Ao2Lk","number":2,"title":"2","description":"描述问题难度，难度2🌟","creator":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"open_issues":18,"closed_issues":0,"state":"open","created_at":"2024-03-20T03:36:14Z","updated_at":"2024-04-25T12:53:33Z","due_on":null,"closed_at":null},"comments":0,"created_at":"2024-04-17T02:50:55Z","updated_at":"2024-04-17T02:51:08Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"在 `TypeScript` 中，与 `JavaScript` 相比，`this` 的行为基本上是一致的。然而，`TypeScript` 提供了类型注解和类型检查，可以帮助开发者更容易地理解和处理 `this` 关键字的使用。\r\n\r\n- 在 `noImplicitThis` 为 `true` 的情况下，必须声明 `this` 的类型，才能在函数或者对象中使用 `this`。\r\n- `Typescript` 中箭头函数的 `this` 和 `ES6` 中箭头函数中的 `this` 是一致的。\r\n\r\n在 `TypeScript` 中，当将 `noImplicitThis` 设置为 `true` 时，意味着在函数或对象中使用 `this` 时，必须显式声明 `this` 的类型。这一设置可以帮助开发者更明确地指定 `this` 的类型，以避免因为隐式的 `this` 引用而导致的潜在问题。\r\n\r\n具体来说，如果将 `noImplicitThis` 设置为`true`，则在下列情况下必须显式声明 `this` 的类型：\r\n\r\n- 在函数内部使用 `this` 时，需要使用箭头函数或显示绑定 `this`。\r\n- 在某些类方法或对象方法中，需要明确定义 `this` 的类型。\r\n\r\n示例代码如下所示：\r\n\r\n``` ts\r\nclass MyClass {\r\n  private value: number = 42;\r\n\r\n  public myMethod(this: MyClass) {\r\n    console.log(this.value);\r\n  }\r\n\r\n  public myMethod2 = () => {\r\n    console.log(this.value);\r\n  }\r\n}\r\n\r\nlet obj = new MyClass();\r\nobj.myMethod(); // 此处必须传入合适的 this 类型\r\n```\r\n\r\n通过将 `noImplicitThis` 设置为 `true`，`TypeScript` 要求我们在使用 `this` 时明确指定其类型，从而在编译阶段进行更严格的类型检查，帮助避免一些可能出现的错误和不确定性。\r\n\r\n注：`noImplicitThis` 是 `TypeScript` 编译器的一个配置选项，用于控制在函数或对象方法中使用 `this` 时的严格性。当将 `noImplicitThis` 设置为 `true` 时，意味着必须显式声明`this` 的类型，否则会触发编译错误。\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/597/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}