{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/552","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/552/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/552/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/552/events","html_url":"https://github.com/hankliu62/interview/issues/552","id":2141250045,"node_id":"I_kwDOLNphd85_oOH9","number":552,"title":"将有序数组转化为二叉搜索树","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:04:33Z","updated_at":"2024-02-19T00:04:33Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"我们先看题：\r\n\r\n给你一个整数数组 nums ，其中元素已经按 升序 排列，请你将其转换为一棵 高度平衡 二叉搜索树。\r\n\r\n高度平衡 二叉树是一棵满足「每个节点的左右两个子树的高度差的绝对值不超过 1 」的二叉树。\r\n\r\n示例 1：\r\n\r\n![image](https://github.com/hankliu62/hankliu62.github.com/assets/8088864/a7cc4f49-ac05-4ccb-9c04-41c2a6365a35)\r\n\r\n```\r\n输入：nums = [-10,-3,0,5,9]\r\n输出：[0,-3,9,-10,null,5]\r\n解释：[0,-10,5,null,-3,null,9] 也将被视为正确答案：\r\n```\r\n\r\n示例 2：\r\n\r\n![image](https://github.com/hankliu62/hankliu62.github.com/assets/8088864/b3d392aa-6bb1-4310-acad-4ea2035b90de)\r\n\r\n```\r\n\r\n输入：nums = [1,3]\r\n输出：[3,1]\r\n解释：[1,3] 和 [3,1] 都是高度平衡二叉搜索树。\r\n\r\n\r\n提示：\r\n\r\n1 <= nums.length <= 104\r\n-104 <= nums[i] <= 104\r\nnums 按 严格递增 顺序排列\r\n```\r\n\r\n**思路**：\r\n\r\n- 构建一颗树包括：构建`root、构建 root.left 和 root.right`\r\n- 题目要求\"高度平衡\" — 构建 `root` 时候，选择数组的中间元素作为 `root` 节点值，即可保持平衡。\r\n- 递归函数可以传递数组，也可以传递指针，选择传递指针的时候：l r 分别代表参与构建BST的数组的首尾索引。\r\n\r\n``` js\r\nvar sortedArrayToBST = function(nums) {\r\n    return toBST(nums, 0, nums.length - 1)\r\n};\r\nconst toBST = function(nums, l, r){\r\n    if( l > r){\r\n        return null;\r\n    }\r\n    const mid = l + r >> 1;\r\n    const root = new TreeNode(nums[mid]);\r\n    root.left = toBST(nums, l, mid - 1);\r\n    root.right = toBST(nums, mid + 1, r);\r\n\r\n    return root;\r\n}\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/552/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}