{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/494","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/494/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/494/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/494/events","html_url":"https://github.com/hankliu62/interview/issues/494","id":2129734282,"node_id":"I_kwDOLNphd85-8SqK","number":494,"title":"LRU缓存算法","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547467878,"node_id":"LA_kwDOLNphd88AAAABhkJuZg","url":"https://api.github.com/repos/hankliu62/interview/labels/algorithm","name":"algorithm","color":"97D3C0","default":false,"description":"算法相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T09:35:24Z","updated_at":"2024-02-12T09:35:25Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"有缓存的地方就有LRU，比如说Vue的keep-alive就是用的LRU缓存算法实现的。\r\n\r\n``` javascript\r\nclass LRUCache {\r\n  constructor(capacity) {\r\n    this.capacity = capacity;  // 缓存容量\r\n    this.map = new Map();  // 使用Map来存储缓存数据，实现O(1)的查找和删除\r\n  }\r\n\r\n  get(key) {\r\n    const value = this.map.get(key);  // 查找缓存数据\r\n    if (value === undefined) {  // 如果数据不存在，返回-1\r\n      return -1;\r\n    } else {  // 如果数据存在，将其从Map中删除并重新插入到Map的最后面\r\n      this.map.delete(key);\r\n      this.map.set(key, value);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  put(key, value) {\r\n    if (this.map.has(key)) {  // 如果缓存数据已存在，将其从Map中删除\r\n      this.map.delete(key);\r\n    }\r\n    this.map.set(key, value);  // 插入新的缓存数据到Map的最后面\r\n    if (this.map.size > this.capacity) {  // 如果缓存容量已满，删除最近最少使用的缓存数据\r\n      const oldestKey = this.map.keys().next().value;  // 获取Map中第一个键，即最近最少使用的缓存数据的键\r\n      this.map.delete(oldestKey);\r\n    }\r\n  }\r\n}\r\n\r\n// 示例\r\nconst cache = new LRUCache(2);  // 初始化容量为2的LRU缓存\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\nconsole.log(cache.get(1));  // 1，因为缓存中存在键为1的数据\r\ncache.put(3, 3);  // 缓存容量已满，删除最近最少使用的缓存数据（键为2的数据）\r\nconsole.log(cache.get(2));  // -1，因为缓存中不存在键为2的数据\r\ncache.put(4, 4);  // 缓存容量已满，删除最近最少使用的缓存数据（键为1的数据）\r\nconsole.log(cache.get(1));  // -1，因为缓存中不存在键为1的数据\r\nconsole.log(cache.get(3));  // 3，因为缓存中存在键为3的数据\r\nconsole.log(cache.get(4));  // 4，因为缓存中存在键为4的数据\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/494/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}