{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/569","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/569/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/569/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/569/events","html_url":"https://github.com/hankliu62/interview/issues/569","id":2165215903,"node_id":"I_kwDOLNphd86BDpKf","number":569,"title":"async和await原理","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468110,"node_id":"LA_kwDOLNphd88AAAABhkJvTg","url":"https://api.github.com/repos/hankliu62/interview/labels/javascript","name":"javascript","color":"383040","default":false,"description":"Javascript相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-03-03T07:10:27Z","updated_at":"2024-03-04T14:19:01Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"async和await是异步编程的关键技术，它们是ES7标准中引入的，用于简化和增强异步编程的体验。\r\n\r\n1. async函数是Generator函数的语法糖，它允许开发者编写异步代码，而无需手动处理回调函数。\r\n\r\nasync函数的主要特点包括:\r\n\r\n  - 自带执行器。async函数不需要手动调用next方法来执行Generator函数，它们内置了执行器，可以像普通函数一样直接调用。\r\n  - 支持await关键字。await关键字用于等待异步操作的结果，它后面可以跟随Promise对象或原始类型的值（如数值、字符串和布尔值）。如果await后面是一个Promise对象，它会阻塞当前代码的执行，直到Promise被解决或拒绝。\r\n  - 返回值是Promise。async函数返回一个Promise对象，如果函数没有返回值，它会返回一个默认的Promise.resolve(undefined)。\r\n\r\n2. await关键字的使用使得异步编程更加直观和易于理解，它允许开发者以同步的方式编写异步代码，从而提高了代码的可读性和可维护性。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/569/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}