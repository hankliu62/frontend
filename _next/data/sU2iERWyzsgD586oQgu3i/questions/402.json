{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/402","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/402/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/402/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/402/events","html_url":"https://github.com/hankliu62/interview/issues/402","id":2129654275,"node_id":"I_kwDOLNphd85-7_ID","number":402,"title":"computed和watch使用场景有什么不同，实现原理呢","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468546,"node_id":"LA_kwDOLNphd88AAAABhkJxAg","url":"https://api.github.com/repos/hankliu62/interview/labels/vue","name":"vue","color":"0E8A16","default":false,"description":"Vue相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T08:44:05Z","updated_at":"2024-03-04T14:18:37Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"### computed\r\n\r\n- computed是值，依赖于其它的状态。比如购物车的总价格，可以根据其它几个价格算得。\r\n- computed有缓存特性，只要依赖的状态没有改变，computed的值就会被缓存起来。当依赖发生变化时，才会重新计算。\r\n\r\n### watch\r\n\r\n- watch用于监听状态的变化，比方说监听路由，一旦监听的状态发生变化，就执行某个函数。\r\n- watch有两个参数也是面试常考点，\r\n    - immediate：当我们希望在组件初始化时执行一次watch函数，就可以开启immediate选项\r\n    - deep：深度监听，开启此选项当监听的对象的某个属性值发生变化，也会触发watch监听函数\r\n\r\n实现原理：\r\n\r\n- computed和watch都是基于Vue响应式原理，首先通过initWatcher和initComputed来解析watch和computed选项，然后遍历，给每个watch和computed添加Watcher对象。\r\n- 不同的是给computed添加的Watcher对象是lazy Watcher，默认不执行，取值的时候才执行。\r\n- computed的缓存特性是通过Watcher对象的dirty属性来实现的。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/402/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### computed","### watch"]},"__N_SSG":true}