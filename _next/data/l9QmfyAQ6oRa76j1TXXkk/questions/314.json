{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/314","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/314/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/314/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/314/events","html_url":"https://github.com/hankliu62/interview/issues/314","id":2129632983,"node_id":"I_kwDOLNphd85-757X","number":314,"title":"react-router","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468371,"node_id":"LA_kwDOLNphd88AAAABhkJwUw","url":"https://api.github.com/repos/hankliu62/interview/labels/react","name":"react","color":"0052CC","default":false,"description":"React相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T08:28:27Z","updated_at":"2024-02-12T08:28:27Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"子组件获得 react-router 的history对象\r\n``` jsx\r\n//子组件中引入\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//暴露的时候  EggRid是自己的组件\r\nexport default withRouter(EggRid);\r\n//这样就能拿到this.props.history了\r\n```\r\n\r\n### history 属性值\r\n\r\n- history.length - 历史堆栈中的条目数\r\n- history.location - 当前的 location\r\n- history.action - 当前导航操作\r\n\r\n### 监听\r\n\r\n可以使用history.listen监听当前位置的更改：\r\n\r\n``` js\r\nconst unlisten = history.listen((location, action) => {\r\n  console.log(\r\n    `The current URL is ${location.pathname}${location.search}${location.hash}`\r\n  );\r\n  console.log(`The last navigation action was ${action}`);\r\n});\r\n\r\n//  取消监听\r\nunlisten();\r\n```\r\n\r\nlocation对象实现 window.location 接口的子集，包括：\r\n\r\n- location.pathname - The path of the URL\r\n- location.search - The URL query string\r\n- location.hash - The URL hash fragment\r\n\r\nLocation还可以具有以下属性：\r\n\r\n- location.state - 当前location不存在于URL中的一些额外状态 (createBrowserHistory、createMemoryHistory支持该属性)\r\n- location.key - 表示当前loaction的唯一字符串 (createBrowserHistory、createMemoryHistory支持该属性)\r\n\r\n### 导航\r\n\r\nhistory对象可以使用以下方法以编程方式更改当前位置：\r\n\r\n- history.push(path, [state])\r\n- history.replace(path, [state])\r\n- history.go(n)\r\n- history.goBack()\r\n- history.goForward()\r\n\r\n使用push或replace时，可以将url路径和状态指定为单独的参数，也可以将object等单个位置中的所有内容作为第一个参数：\r\n\r\n- 一个url路径\r\n- 一个路径对象 { pathname, search, hash, state }\r\n\r\n``` js\r\n// Push a new entry onto the history stack.\r\nhistory.push('/home');\r\n\r\n// Push a new entry onto the history stack with a query string\r\n// and some state. Location state does not appear in the URL.\r\nhistory.push('/home?the=query', { some: 'state' });\r\n\r\n// If you prefer, use a single location-like object to specify both\r\n// the URL and state. This is equivalent to the example above.\r\nhistory.push({\r\n  pathname: '/home',\r\n  search: '?the=query',\r\n  state: { some: 'state' }\r\n});\r\n\r\n// Go back to the previous history entry. The following\r\n// two lines are synonymous.\r\nhistory.go(-1);\r\nhistory.goBack();\r\n```\r\n\r\n### 其它\r\n\r\n1. 使用basename\r\n\r\n如果应用程序中的所有URL都与其他“base”URL相关，请使用 basename 选项。此选项将给定字符串添加到您使用的所有URL的前面。\r\n\r\n``` js\r\nconst history = createHistory({\r\n  basename: '/the/base'\r\n});\r\n\r\nhistory.listen(location => {\r\n  console.log(location.pathname); // /home\r\n});\r\n\r\nhistory.push('/home'); // URL is now /the/base/home\r\n```\r\n\r\n注意：在createMemoryHistory中不支持basename属性。\r\n\r\n2. 在CreateBrowserHistory中强制刷新整页\r\n\r\n默认情况下，createBrowserHistory使用HTML5 pushState和replaceState来防止在导航时从服务器重新加载整个页面。如果希望在url更改时重新加载，请使用forceRefresh选项。\r\n\r\n``` js\r\nconst history = createBrowserHistory({\r\n  forceRefresh: true\r\n});\r\n```\r\n\r\n3. 修改createHashHistory中的Hash类型\r\n\r\n默认情况下，createHashHistory在基于hash的URL中使用'/'。可以使用hashType选项使用不同的hash格式。\r\n\r\n``` js\r\nconst history = createHashHistory({\r\n  hashType: 'slash' // the default\r\n});\r\n\r\nhistory.push('/home'); // window.location.hash is #/home\r\n\r\nconst history = createHashHistory({\r\n  hashType: 'noslash' // Omit the leading slash\r\n});\r\n\r\nhistory.push('/home'); // window.location.hash is #home\r\n\r\nconst history = createHashHistory({\r\n  hashType: 'hashbang' // Google's legacy AJAX URL format\r\n});\r\n\r\nhistory.push('/home'); // window.location.hash is #!/home\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/314/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### history 属性值","### 监听","### 导航","### 其它"]},"__N_SSG":true}