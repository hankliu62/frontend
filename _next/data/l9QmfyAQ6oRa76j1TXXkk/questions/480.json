{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/480","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/480/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/480/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/480/events","html_url":"https://github.com/hankliu62/interview/issues/480","id":2129731516,"node_id":"I_kwDOLNphd85-8R-8","number":480,"title":"微前端适用于什么场景？设计一个微前端框架要怎么考虑？","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468011,"node_id":"LA_kwDOLNphd88AAAABhkJu6w","url":"https://api.github.com/repos/hankliu62/interview/labels/engine","name":"engine","color":"1d76db","default":false,"description":"工程化相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T09:33:41Z","updated_at":"2024-02-12T09:33:42Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"微前端适用于以下场景：\r\n\r\n1. 随着项目规模逐渐扩大，团队协作效率降低，可以考虑将大项目拆分成多个小项目，每个小项目都由独立的小型团队独立开发独立部署，\r\n2. 团队技术栈不同，可以将项目拆分，每个子项目采用不同技术栈开发，然后用微前端框架把项目组合在一块。\r\n\r\n设计一个微前端框架，需要考虑：\r\n\r\n1. 样式隔离：样式隔离可以采用的方案有CSS Modules、Shadow DOM、CSS-in-JS或者命名约定的方式。\r\n2. JS隔离：JS隔离需要创建沙箱环境，JS里可以通过Web Worker或者iframe来创建沙箱，还可以通过IIFE(立即调用表达式)来创建沙箱。\r\n3. 应用通信：应用之间可以采取URL参数传递信息、事件总线或者全局变量(会造成命名冲突和状态污染、，不够优雅)来实现通信。\r\n4. 路由管理：微前端中的路由管理，主要包括两个方面的内容：一是在宿主应用中对微前端应用的路由进行管理，二是在微前端应用内部实现自身的路由管理。\r\n5. 代码共享：可以通过将公用代码提取成三方库的形式来共享代码，还可以采用Webpack5的模块联邦来实现代码共享。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/480/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}