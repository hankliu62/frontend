{"pageProps":{"article":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/98","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/98/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/98/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/98","id":2124556234,"node_id":"I_kwDOBiJZIc5-oifK","number":98,"title":"浅析CSS里的BFC和IFC的用法","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6527252877,"node_id":"LA_kwDOBiJZIc8AAAABhQ35jQ","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/interview%20questions","name":"interview questions","color":"722ed1","default":false,"description":"面试题"},{"id":6536117711,"node_id":"LA_kwDOBiJZIc8AAAABhZU9zw","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/css","name":"css","color":"a0d911","default":false,"description":"分类-CSS相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-08T07:51:15Z","updated_at":"2024-02-09T08:33:14Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"### BFC简介\r\n\r\n所谓的 Formatting Context(格式化上下文), 它是 W3C CSS2.1 规范中的一个概念。\r\n\r\n- 格式化上下文(FC)是页面中的一块渲染区域，并且有一套渲染规则。\r\n- 格式化上下文(FC)决定了其子元素将如何定位，以及和其他元素的关系和相互作用。\r\n\r\nBlock Formatting Context (BFC，块级格式化上下文)，就是一个块级元素的渲染显示规则。通俗一点讲，可以把 BFC 理解为一个封闭的大箱子，容器里面的子元素不会影响到外面的元素，反之也如此。\r\n\r\nBFC的布局规则如下：\r\n\r\n1. 内部的盒子会在垂直方向，一个个地放置；\r\n2. BFC是页面上的一个隔离的独立容器；\r\n3. 属于同一个BFC的 两个相邻Box的 上下margin会发生重叠；\r\n4. 计算BFC的高度时，浮动元素也参与计算；\r\n5. 每个元素的左边，与包含的盒子的左边相接触，即使存在浮动也是如此；\r\n6. BFC的区域不会与float重叠。\r\n\r\n那么如何触发 BFC 呢？只要元素满足下面任一条件即可触发 BFC 特性：\r\n\r\n- body 根元素；\r\n- 浮动元素：float 不为none的属性值；\r\n- 绝对定位元素：position (absolute、fixed)；\r\n- display为： inline-block、table-cells、flex；\r\n- overflow 除了visible以外的值 (hidden、auto、scroll)。\r\n\r\n### BFC的特性及应用\r\n\r\n#### 同一个 BFC下外边距 会发生折叠\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n<style>\r\n  .p {\r\n    width: 200px;\r\n    height: 50px;\r\n    margin: 50px 0;\r\n    background-color: red;\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"p\"></div>\r\n  <div class=\"p\"></div>\r\n</body>\r\n</html>\r\n```\r\n\r\n效果如下所示:\r\n\r\n![同一个 BFC 下两个相邻的普通流中的块元素垂直方向上的 margin会折叠](https://user-images.githubusercontent.com/8088864/125714340-57813f51-5cad-4844-9247-2ba5cc04ac8d.jpg)\r\n\r\n根据BFC规则的第3条：\r\n\r\n盒子垂直方向的距离由margin决定，\r\n\r\n属于 同一个BFC的 + 两个相邻Box的 + 上下margin 会发生重叠。\r\n\r\n上文的例子 之所以发生外边距折叠，是因为他们 同属于 body这个根元素， 所以我们需要让 它们 不属于同一个BFC，就能避免外边距折叠：\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n<style>\r\n  .wrap {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .p {\r\n    width: 200px;\r\n    height: 50px;\r\n    margin: 50px 0;\r\n    background-color: red;\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"p\"></div>\r\n  <div class=\"wrap\">\r\n    <div class=\"p\"></div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n效果如下所示:\r\n\r\n![利用 BFC 下可以避免两个相邻的块元素垂直方向上的 margin折叠](https://user-images.githubusercontent.com/8088864/125714635-3ff51432-6415-40df-938d-c4c2fe654ca2.jpg)\r\n\r\n#### BFC可以包含浮动的元素(清除浮动)\r\n\r\n正常情况下，浮动的元素会脱离普通文档流，所以下面的代码里：\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n<style>\r\n  .wrap {\r\n    border: 1px solid #000;\r\n  }\r\n\r\n  .p {\r\n    width: 200px;\r\n    height: 50px;\r\n    background-color: #eee;\r\n    float: left;\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"wrap\">\r\n    <div class=\"p\"></div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n外层的div会无法包含 内部浮动的div。\r\n\r\n效果如下所示:\r\n\r\n![外层的div会无法包含内部浮动的div](https://user-images.githubusercontent.com/8088864/125714940-1de23469-a365-47f4-82ab-3a89fea5441b.jpg)\r\n\r\n但如果我们 触发外部容器的BFC，根据BFC规范中的第4条：计算BFC的高度时，浮动元素也参与计算，那么外部div容器就可以包裹着浮动元素，所以只要把代码修改如下：\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n<style>\r\n  .wrap {\r\n    border: 1px solid #000;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .p {\r\n    width: 200px;\r\n    height: 50px;\r\n    background-color: #eee;\r\n    float: left;\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"wrap\">\r\n    <div class=\"p\"></div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n效果如下所示:\r\n\r\n![利用BFC外层的div会包含内部浮动的div](https://user-images.githubusercontent.com/8088864/125715066-4a11c8a9-caef-4258-acfb-87e3cc8b8302.jpg)\r\n\r\n#### BFC可以阻止元素被浮动元素覆盖\r\n\r\n正常情况下，浮动的元素会脱离普通文档流，会覆盖着普通文档流的元素上。所以下面的代码里：\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n<style>\r\n.aside {\r\n  width: 100px;\r\n  height: 150px;\r\n  float: left;\r\n  background: black;\r\n}\r\n\r\n.main {\r\n  width: 300px;\r\n  height: 200px;\r\n  background-color: red;\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"aside\"></div>\r\n  <div class=\"main\"></div>\r\n</body>\r\n</html>\r\n```\r\n\r\n效果如下所示:\r\n\r\n![浮动的元素会脱离普通文档流，会覆盖着普通文档流的元素上](https://user-images.githubusercontent.com/8088864/125716169-ccf5e6b4-f51e-431e-8aff-0b8e753b88a8.png)\r\n\r\n\r\n之所以是这样，是因为上文的 规则5： 每个元素的左边，与包含的盒子的左边相接触，即使存在浮动也是如此；\r\n\r\n所以要想改变效果，使其互补干扰，就得利用规则6 ：BFC的区域不会与float重叠，让 \\<div class=\"main\"> 也能触发BFC的性质。\r\n\r\n将代码改成下列所示:\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n<style>\r\n.aside {\r\n  width: 100px;\r\n  height: 150px;\r\n  float: left;\r\n  background: black;\r\n}\r\n\r\n.main {\r\n  width: 300px;\r\n  height: 200px;\r\n  background-color: red;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n  <div class=\"aside\"></div>\r\n  <div class=\"main\"></div>\r\n</body>\r\n</html>\r\n```\r\n\r\n效果如下所示：\r\n\r\n![利用BFC可以阻止元素被浮动元素覆盖](https://user-images.githubusercontent.com/8088864/125716325-7b9fe487-9b6e-4d35-b8b7-33839bb9ebce.png)\r\n\r\n通过这种方法，就能 用来实现 两列的自适应布局。\r\n\r\n### 简要介绍IFC\r\n\r\n1. 框会从包含块的顶部开始，一个接一个地水平摆放。\r\n\r\n2. 摆放这些框时，它们在水平方向的 内外边距+边框 所占用的空间都会被考虑；\r\n    在垂直方向上，这些框可能会以不同形式来对齐；\r\n    水平的margin、padding、border有效，垂直无效，不能指定宽高。\r\n\r\n3. 行框的宽度是 由包含块和存在的浮动来决定;\r\n  行框的高度 由行高来决定。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/98/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/98/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### BFC简介","### BFC的特性及应用","#### 同一个 BFC下外边距 会发生折叠","#### BFC可以包含浮动的元素(清除浮动)","#### BFC可以阻止元素被浮动元素覆盖","### 简要介绍IFC"]},"__N_SSG":true}