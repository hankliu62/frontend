{"pageProps":{"article":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/176","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/176/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/176/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/176/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/176","id":2124565008,"node_id":"I_kwDOBiJZIc5-okoQ","number":176,"title":"实现 Promise.all","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6527252877,"node_id":"LA_kwDOBiJZIc8AAAABhQ35jQ","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/interview%20questions","name":"interview questions","color":"722ed1","default":false,"description":"面试题"},{"id":6536264028,"node_id":"LA_kwDOBiJZIc8AAAABhZd5XA","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/handwritten","name":"handwritten","color":"faad14","default":false,"description":"分类-手写题相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-08T07:58:12Z","updated_at":"2024-02-09T08:12:23Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"### 1）核心思路\r\n\r\n1. 接收一个 Promise 实例的数组或具有 Iterator 接口的对象作为参数\r\n2. 这个方法返回一个新的 promise 对象，\r\n3. 遍历传入的参数，用Promise.resolve()将参数\"包一层\"，使其变成一个promise对象\r\n4. 参数所有回调成功才是成功，返回值数组与参数顺序一致\r\n5. 参数数组其中一个失败，则触发失败状态，第一个触发失败的 Promise 错误信息作为 Promise.all 的错误信息。\r\n\r\n### 2）实现代码\r\n\r\n一般来说，Promise.all 用来处理多个并发请求，也是为了页面数据构造的方便，将一个页面所用到的在不同接口的数据一起请求过来，不过，如果其中一个接口失败了，多个请求也就失败了，页面可能啥也出不来，这就看当前页面的耦合程度了～\r\n\r\n``` js\r\nfunction promiseAll(promises) {\r\n  return new Promise(function(resolve, reject) {\r\n    if (!Array.isArray(promises)) {\r\n        throw new TypeError(`argument must be a array`);\r\n    }\r\n    var resolvedCounter = 0;\r\n    var promiseNum = promises.length;\r\n    var resolvedResult = [];\r\n    for (let i = 0; i < promiseNum; i++) {\r\n      Promise.resolve(promises[i]).then(value=>{\r\n        resolvedCounter++;\r\n        resolvedResult[i] = value;\r\n        if (resolvedCounter === promiseNum) {\r\n          return resolve(resolvedResult);\r\n        }\r\n      }, error=>{\r\n        return reject(error);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// test\r\nlet p1 = new Promise(function (resolve, reject) {\r\n  setTimeout(function () {\r\n    resolve(1);\r\n  }, 1000);\r\n})\r\nlet p2 = new Promise(function (resolve, reject) {\r\n  setTimeout(function () {\r\n    resolve(2);\r\n  }, 2000);\r\n})\r\nlet p3 = new Promise(function (resolve, reject) {\r\n  setTimeout(function () {\r\n    resolve(3);\r\n  }, 3000);\r\n})\r\npromiseAll([p3, p1, p2]).then(res => {\r\n  console.log(res); // [3, 1, 2]\r\n});\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/176/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### 1）核心思路","### 2）实现代码"]},"__N_SSG":true}