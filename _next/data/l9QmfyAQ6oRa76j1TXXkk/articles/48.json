{"pageProps":{"article":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/48","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/48/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/48/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/48/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/48","id":492042666,"node_id":"MDU6SXNzdWU0OTIwNDI2NjY=","number":48,"title":"神奇黑魔法代码 or 常用代码","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":688950687,"node_id":"MDU6TGFiZWw2ODg5NTA2ODc=","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/blog","name":"blog","color":"1677ff","default":false,"description":"博客文章"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2019-09-11T06:27:51Z","updated_at":"2020-04-02T05:57:33Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"## Javascript检测开发者工具Devtools是否打开\r\n``` js\r\nfunction checkOpenedDevTools() {\r\n  let opened = false;\r\n  const isFirefox = ~navigator.userAgent.indexOf(\"Firefox\");\r\n  let checkElement = '';\r\n  if (isFirefox) {\r\n    checkElement = /./;\r\n    checkElement.toString = function() {\r\n      opened = true;\r\n    }\r\n  } else {\r\n    checkElement = new Image();\r\n    checkElement.__defineGetter__('id', function() {\r\n      opened = true;\r\n    });\r\n  }\r\n  console.log(checkElement);\r\n  console.clear && console.clear();\r\n\r\n  return opened;\r\n}\r\n\r\nsetInterval(function() {\r\n  const opened = checkOpenedDevTools()\r\n}, 1000);\r\n```\r\n\r\n### 方案一\r\n\r\nconsole.log隐式调用元素的id\r\n\r\n``` js\r\nfunction isDevToolsOpened() {\r\n  let opened = false;\r\n  const element = document.createElement('any');\r\n  element.__defineGetter__('id', function() {\r\n    opened = true;\r\n  });\r\n console.log(element);\r\n console.clear && console.clear();\r\n return opened;\r\n}\r\n```\r\n兼容浏览器：Chrome，IE11\r\n\r\n### 方案二\r\n\r\nconsole.log()隐式调用RegExp的toString()\r\n\r\n``` js\r\nfunction isDevToolsOpened() {\r\n  let opened = false;\r\n  const devTools = /./;\r\n  devTools.toString = function() {\r\n    opened = true;\r\n  }\r\n  console.log(devTools);\r\n  console.clear && console.clear();\r\n  return opened;\r\n}\r\n```\r\n兼容浏览器：Firefox，IE11\r\n\r\n各浏览器测试版本：\r\n1. Chrome： 64.0.3282.186（正式版本） （64 位）\r\n2. Firefox：58.0.2 (64 位)\r\n3. IE：11\r\n\r\n## UserAgent设备检测\r\n``` js\r\nconst platform = (function(){\r\n  let ua = {}\r\n\r\n  if (window && window.navigator) {\r\n    const u = navigator.userAgent\r\n\r\n    ua = {\r\n      isAndroid: u.indexOf('Android') > -1 || u.indexOf('Adr') > -1,\r\n      isIPhone: u.indexOf('iPhone') > -1 ,\r\n      isIPad: u.indexOf('iPad') > -1 || u.indexOf('Macintosh') > -1,\r\n      isWeixin: u.indexOf('MicroMessenger') > -1,\r\n      isQQ: u.match(/\\sQQ/i) == \" qq\"\r\n    }\r\n\r\n    for (let key in ua) {\r\n      if (!ua[key]) {\r\n        delete ua[key]\r\n      }\r\n    }\r\n\r\n    ua.isIOS = ua.isIPad || ua.isIPhone;\r\n  }\r\n  return ua\r\n})();\r\n```\r\n\r\n## 日期格式化\r\n``` js\r\nexport default class Dater {\r\n  static format = (date, formatter = 'YYYY-MM-DD hh:mm:ss') => {\r\n    if (!date) {\r\n      return date;\r\n    }\r\n\r\n    let time;\r\n\r\n    try {\r\n      time = new Date(date);\r\n    } catch (e) {\r\n      return date;\r\n    }\r\n\r\n    const oDate = {\r\n      Y: time.getFullYear(),\r\n      M: time.getMonth() + 1,\r\n      D: time.getDate(),\r\n      h: time.getHours(),\r\n      H: time.getHours(),\r\n      m: time.getMinutes(),\r\n      s: time.getSeconds(),\r\n      S: time.getMilliseconds(),\r\n    };\r\n\r\n    return formatter.replace(/(Y|M|D|h|H|m|s|S)+/g, (res, key) => {\r\n      let len = 2;\r\n\r\n      switch (res.length) {\r\n        case 1:\r\n          len = res.slice(1, 0) === 'Y' ? 4 : 2;\r\n          break;\r\n        case 2:\r\n          len = 2;\r\n          break;\r\n        case 3:\r\n          len = 3;\r\n          break;\r\n        case 4:\r\n          len = 4;\r\n          break;\r\n        default:\r\n          len = 2;\r\n      }\r\n\r\n      return `0${oDate[key]}`.slice(-len);\r\n    });\r\n  }\r\n}\r\n```\r\n\r\n## LocalStorage本地数据操作\r\n``` js\r\nimport { Base64 } from 'js-base64';\r\n\r\nexport default class Storage {\r\n  static genKey = (key) => {\r\n    return `demo/${key}`;\r\n  }\r\n\r\n  static genEncodeSignKey = (key) => {\r\n    return `${Storage.genKey(key)}_KEY_ENCODE`;\r\n  }\r\n\r\n  static genExpireSignKey = (key) => {\r\n    return `${Storage.genKey(key)}_KEY_EXPIRE`;\r\n  }\r\n\r\n  static setItem = (key, item, encode = false, expire = 0) => {\r\n    const value = encode ? Base64.encode(item) : item;\r\n    const realKey = Storage.genKey(key);\r\n    const encodeSignKey = Storage.genEncodeSignKey(key);\r\n\r\n    if (expire) {\r\n      const expireSignKey = Storage.genExpireSignKey(key);\r\n\r\n      window.localStorage.setItem(expireSignKey, new Date().valueOf() + expire);\r\n    }\r\n\r\n    encode && window.localStorage.setItem(encodeSignKey, 'true');\r\n    window.localStorage.setItem(realKey, value);\r\n  }\r\n\r\n  static getItem = (key) => {\r\n    const realKey = Storage.genKey(key);\r\n    const encodeSignKey = Storage.genEncodeSignKey(key);\r\n    const value = window.localStorage.getItem(realKey);\r\n    const encodeSignItem = window.localStorage.getItem(encodeSignKey);\r\n\r\n    const expireSignKey = Storage.genExpireSignKey(key);\r\n    const expireSignItem = window.localStorage.getItem(expireSignKey);\r\n\r\n    if (expireSignItem) {\r\n      const currentTs = new Date().valueOf();\r\n\r\n      if (currentTs > expireSignItem) {\r\n        Storage.removeItem(key);\r\n\r\n        return undefined;\r\n      }\r\n    }\r\n\r\n    return value && encodeSignItem === 'true' ? Base64.decode(value) : value;\r\n  }\r\n\r\n  static removeItem = (key) => {\r\n    const realKey = Storage.genKey(key);\r\n    const encodeSignKey = Storage.genEncodeSignKey(key);\r\n    const expireSignKey = Storage.genExpireSignKey(key);\r\n\r\n    window.localStorage.removeItem(realKey);\r\n    window.localStorage.removeItem(encodeSignKey);\r\n    window.localStorage.removeItem(expireSignKey);\r\n  }\r\n\r\n  static clear = () => {\r\n    window.localStorage.clear();\r\n  }\r\n}\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/48/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/48/timeline","performed_via_github_app":null,"state_reason":null},"menus":["## Javascript检测开发者工具Devtools是否打开","### 方案一","### 方案二","## UserAgent设备检测","## 日期格式化","## LocalStorage本地数据操作"]},"__N_SSG":true}