{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/374","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/374/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/374/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/374/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/374","id":2125622625,"node_id":"I_kwDOBiJZIc5-sm1h","number":374,"title":"深入keep-alive组件实现","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6527252877,"node_id":"LA_kwDOBiJZIc8AAAABhQ35jQ","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/interview%20questions","name":"interview questions","color":"722ed1","default":false,"description":"面试题"},{"id":6536119786,"node_id":"LA_kwDOBiJZIc8AAAABhZVF6g","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/vue","name":"vue","color":"0E8A16","default":false,"description":"面试题-Vue相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-08T16:41:29Z","updated_at":"2024-02-09T07:22:15Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"说完了keep-alive组件的使用，我们从源码角度看一下keep-alive组件究竟是如何实现组件的缓存的呢？\r\n\r\ncreated与destroyed钩子\r\n\r\ncreated钩子会创建一个cache对象，用来作为缓存容器，保存vnode节点。\r\n\r\n``` vue\r\ncreated () {\r\n    /* 缓存对象 */\r\n    this.cache = Object.create(null)\r\n    // 记录缓存组件vnode的个数\r\n    this.keys = []\r\n},\r\n```\r\n\r\ndestroyed钩子则在组件被销毁的时候清除cache缓存中的所有组件实例。\r\n\r\n``` vue\r\n/* destroyed钩子中销毁所有cache中的组件实例 */\r\ndestroyed () {\r\n    for (const key in this.cache) {\r\n      pruneCacheEntry(this.cache, key, this.keys)\r\n    }\r\n},\r\n```\r\n\r\n### render\r\n\r\n``` vue\r\nrender () {\r\n  const vnode: VNode = getFirstComponentChild(this.$slots.default)\r\n  const componentOptions: ?VNodeComponentOptions = vnode && vnode.componentOptions\r\n  if (componentOptions) {\r\n    // check pattern\r\n    const name: ?string = getComponentName(componentOptions)\r\n    if (name && (\r\n      (this.include && !matches(this.include, name)) ||\r\n      (this.exclude && matches(this.exclude, name))\r\n    )) {\r\n      return vnode\r\n    }\r\n\r\n    const { cache, keys } = this\r\n    const key: ?string = vnode.key == null\r\n      // same constructor may get registered as different local components\r\n      // so cid alone is not enough (#3269)\r\n      ? componentOptions.Ctor.cid + (componentOptions.tag ? `::${componentOptions.tag}` : '')\r\n      : vnode.key\r\n    if (cache[key]) {\r\n      vnode.componentInstance = cache[key].componentInstance\r\n      // make current key freshest\r\n      remove(keys, key)\r\n      keys.push(key)\r\n    } else {\r\n      cache[key] = vnode\r\n      keys.push(key)\r\n      // prune oldest entry\r\n      if (this.max && keys.length > parseInt(this.max)) {\r\n        pruneCacheEntry(cache, keys[0], keys, this._vnode)\r\n      }\r\n    }\r\n\r\n    vnode.data.keepAlive = true\r\n  }\r\n  return vnode\r\n}\r\n```\r\n\r\n### watch\r\n\r\n用watch来监听include与exclude这两个属性的改变，在改变的时候修改cache缓存中的缓存数据。\r\n\r\n``` vue\r\nwatch: {\r\n    /* 监视include以及exclude，在被修改的时候对cache进行修正 */\r\n    include (val: string | RegExp) {\r\n        pruneCache(this.cache, this._vnode, name => matches(val, name))\r\n    },\r\n    exclude (val: string | RegExp) {\r\n        pruneCache(this.cache, this._vnode, name => !matches(val, name))\r\n    }\r\n},\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/374/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### render","### watch"]},"__N_SSG":true}