{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/548","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/548/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/548/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/548/events","html_url":"https://github.com/hankliu62/interview/issues/548","id":2141249949,"node_id":"I_kwDOLNphd85_oOGd","number":548,"title":"两个数组的交集II(350)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:04:21Z","updated_at":"2024-02-19T00:04:21Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"题目如下：给定两个数组，编写一个函数来计算它们的交集。\r\n\r\n```\r\n示例 1：\r\n\r\n输入：nums1 = [1,2,2,1], nums2 = [2,2]\r\n输出：[2,2]\r\n\r\n示例 2:\r\n\r\n输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]\r\n输出：[4,9]\r\n\r\n说明：\r\n\r\n输出结果中每个元素出现的次数，应与元素在两个数组中出现次数的最小值一致。\r\n我们可以不考虑输出结果的顺序。\r\n```\r\n\r\n这个取交集需要保留重复元素，可以是用双指针来解答，具体思路和代码如下\r\n\r\n- 如果两个数组是有序的，则可以使用双指针的方法得到两个数组的交集。\r\n\r\n- 首先对两个数组进行排序，然后使用两个指针遍历两个数组。\r\n\r\n  - 初始时，两个指针分别指向两个数组的头部。每次比较两个指针指向的两个数组中的数字，如果两个数字不相等，则将指向较小数字的指针右移一位，如果两个数字相等，将该数字添加到答案，并将两个指针都右移一位。当至少有一个指针超出数组范围时，遍历结束\r\n\r\n``` js\r\nvar intersect = function(nums1, nums2) {\r\n  nums1 = nums1.sort((a, b) => a - b);\r\n  nums2 = nums2.sort((a, b) => a - b);\r\n  let l1 = 0;\r\n  let l2 = 0;\r\n  const nums1Len = nums1.length;\r\n  const nums2Len = nums2.length;\r\n  const ret = [];\r\n  while(l1 < nums1Len && l2 < nums2Len){\r\n    if(nums1[l1] === nums2[l2]){\r\n      ret.push(nums1[l1]);\r\n      l1++;\r\n      l2++;\r\n    }\r\n    if(nums1[l1] > nums2[l2]) l2++;\r\n    if(nums1[l1] < nums2[l2]) l1++;\r\n  }\r\n  return ret;\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/548/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}