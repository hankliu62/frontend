{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/526","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/526/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/526/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/526/events","html_url":"https://github.com/hankliu62/interview/issues/526","id":2141248381,"node_id":"I_kwDOLNphd85_oNt9","number":526,"title":"有效的字母异位词(242)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:01:11Z","updated_at":"2024-02-19T00:01:11Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"我们先看一下题目：\r\n\r\n```\r\n给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。\r\n\r\n注意：若 s 和 t 中每个字符出现的次数都相同，则称 s 和 t 互为字母异位词。\r\n\r\n示例 1:\r\n\r\n输入: s = \"anagram\", t = \"nagaram\"\r\n输出: true\r\n示例 2:\r\n\r\n输入: s = \"rat\", t = \"car\"\r\n输出: false\r\n```\r\n\r\n思路：这个题一看字眼，出现次数相同，次数不就是记数吗，记数题型，map走起！\r\n\r\n声明计数器，一个对象 `const obj = {}`\r\n遍历s字符串，如果遍历到字符串的`'a'`字母，去看`obj[a]`是否存在\r\n不存在说明第一次遍历到`'a'`字母，那么初始化`obj[a] = 1`\r\n如果存在则`obj[a] += 1`\r\nt字符串同理，它每次`减1`\r\n遍历完s字符串后，遍历obj对象，看它的每一对`key：value`，是否`value`都是`0`\r\n``` js\r\nvar isAnagram = function(s, t) {\r\n\r\n  const sLen = s.length;\r\n  const tLen = t.length;\r\n  if(sLen !== tLen ) {\r\n      return false;\r\n  }\r\n  const obj = {};\r\n  for(let i = 0 ; i < sLen ; i++){\r\n      const currentS = s[i];\r\n      const currentT = t[i];\r\n      obj[currentS] ? obj[currentS]++ : obj[currentS] = 1;\r\n      obj[currentT] ? obj[currentT]-- : obj[currentT] = -1;\r\n  }\r\n  return Object.values(obj).every(v=>v===0);\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/526/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}