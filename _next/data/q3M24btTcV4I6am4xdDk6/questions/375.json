{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/375","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/375/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/375/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/375/events","html_url":"https://github.com/hankliu62/interview/issues/375","id":2129641033,"node_id":"I_kwDOLNphd85-775J","number":375,"title":"为什么会出现跨域问题，解决跨域有哪些方案，你选择哪个","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468110,"node_id":"LA_kwDOLNphd88AAAABhkJvTg","url":"https://api.github.com/repos/hankliu62/interview/labels/javascript","name":"javascript","color":"383040","default":false,"description":"Javascript相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T08:34:32Z","updated_at":"2024-03-04T14:18:25Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"出现跨域问题是由于浏览器的同源策略，即不允许在同一个域名、协议和端口下的页面使用另一个域名、协议和端口下的资源。\r\n\r\n解决跨域问题的方案：\r\n\r\n1. CORS：CORS是后端设置响应头来允许跨域的。客户端发送跨域请求时，会先发送一个OPTIONS请求，请求服务器确认是否允许跨域请求，如果允许，则发送真正的请求。\r\n2. 代理：因为同源协议只存在于浏览器，而服务器向服务器发送请求是没有跨域问题的。所以可以使用服务器端代理来避免浏览器跨域限制。在开发环境下，一般是配置脚手架里的devServer来设置代理，生产环境可以直接把前端页面当作静态文件放到后端项目里，或者在生产环境下用Nginx代理。\r\n3. JSONP：利用script标签的src属性不受同源策略限制的特点，缺陷是不支持Post方法。JSONP现在已经很少使用了，但是一些老旧的第三方API可能是以JSONP形式提供的。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/375/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}