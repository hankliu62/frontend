{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/551","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/551/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/551/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/551/events","html_url":"https://github.com/hankliu62/interview/issues/551","id":2141250025,"node_id":"I_kwDOLNphd85_oOHp","number":551,"title":"二叉树的最大深度","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:04:30Z","updated_at":"2024-02-19T00:04:30Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"这个题在面试滴滴的时候遇到过，主要是掌握二叉树遍历的套路\r\n\r\n- 只要遍历到这个节点既没有左子树，又没有右子树的时候\r\n- 说明就到底部了，这个时候如果之前记录了深度，就可以比较是否比之前记录的深度大，大就更新深度\r\n- 然后以此类推，一直比较到深度最大的\r\n\r\n``` js\r\nvar maxDepth = function(root) {\r\n    if(!root) return root;\r\n    let ret = 1;\r\n    function dfs(root, depth){\r\n        if(!root.left && !root.right) ret = Math.max(ret, depth);\r\n        if(root.left) dfs(root.left, depth+1);\r\n        if(root.right) dfs(root.right, depth+1);\r\n    }\r\n    dfs(root, ret);\r\n    return ret\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/551/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}