{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/558","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/558/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/558/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/558/events","html_url":"https://github.com/hankliu62/interview/issues/558","id":2141250200,"node_id":"I_kwDOLNphd85_oOKY","number":558,"title":"x的平方根(69)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:04:51Z","updated_at":"2024-02-19T00:04:51Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"题目如下：实现 `int sqrt(int x)` 函数。\r\n\r\n计算并返回 `x` 的平方根，其中 `x` 是非负整数。\r\n\r\n由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。\r\n\r\n```\r\n示例 1:\r\n\r\n输入: 4\r\n输出: 2\r\n\r\n示例 2:\r\n\r\n输入: 8\r\n输出: 2\r\n说明: 8 的平方根是 2.82842...,\r\n     由于返回类型是整数，小数部分将被舍去。\r\n```\r\n\r\n这道题是典型的二分法解题，所以我们需要熟悉二分法的通用模板，我们出一个题：\r\n\r\n在 [1, 2, 3, 4, 5, 6] 中找到 4，若存在则返回下标，不存在返回-1\r\n\r\n``` js\r\nconst arr = [1, 2, 3, 4, 5, 6];\r\nfunction getIndex1(arr, key) {\r\n  let low = 0;\r\n  const high = arr.length - 1;\r\n  while (low <= high) {\r\n    const mid = Math.floor((low + high) / 2);\r\n    if (key === arr[mid]) {\r\n      return mid;\r\n    }\r\n    if (key > arr[mid]) {\r\n      low = mid + 1;\r\n    } else {\r\n      height = mid - 1;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\nconsole.log(getIndex1(arr, 5)); // 4\r\n```\r\n\r\n所以这道题的意思就是，我们找一个数平方跟x最相近的数，二分法的用法中也有找相近数的功能\r\n\r\n所以代码如下：\r\n``` js\r\nvar mySqrt = function(x) {\r\n    let [l , r] = [0, x];\r\n    let ans = -1;\r\n    while(l <= r) {\r\n        const mid = (l + r) >> 1;\r\n        if(mid * mid > x){\r\n            r = mid - 1\r\n        } else if(mid * mid < x){\r\n            ans = mid; // 防止越界\r\n            l = mid + 1;\r\n        } else {\r\n            ans = mid;\r\n            return ans;\r\n        }\r\n    }\r\n    return ans;\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/558/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}