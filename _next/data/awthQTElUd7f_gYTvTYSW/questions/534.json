{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/534","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/534/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/534/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/534/events","html_url":"https://github.com/hankliu62/interview/issues/534","id":2141248555,"node_id":"I_kwDOLNphd85_oNwr","number":534,"title":"最长公共前缀(14)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:01:35Z","updated_at":"2024-02-19T00:01:35Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"题目如下：\r\n\r\n编写一个函数来查找字符串数组中的最长公共前缀。\r\n\r\n如果不存在公共前缀，返回空字符串 \"\"。\r\n\r\n```\r\n示例 1：\r\n\r\n输入：strs = [\"flower\",\"flow\",\"flight\"]\r\n输出：\"fl\"\r\n示例 2：\r\n\r\n输入：strs = [\"dog\",\"racecar\",\"car\"]\r\n输出：\"\"\r\n解释：输入不存在公共前缀。\r\n\r\n提示：\r\n\r\n0 <= strs.length <= 200\r\n0 <= strs[i].length <= 200\r\nstrs[i] 仅由小写英文字母组成\r\n```\r\n\r\n**思路**：\r\n\r\n这个题的思路就是，假如你求数组里3个元素的最长公共前缀\r\n\r\n- 你先拿前两个比较，求出他们两个的最长公共前缀\r\n- 然后上面求出的结果去跟第三个元素求最长公共前缀\r\n- n个元素就一直这么`reduce`下去\r\n\r\n``` js\r\n// 这个是求出两个元素最长公共前缀的方法\r\nvar longestCommonPrefix = function (strs) {\r\n  if (strs.length === 0) return ''\r\n  if (strs.length === 1) return strs[0];\r\n  return strs.reduce(getSameStr, strs[0]);\r\n};\r\n\r\nfunction getSameStr(a, b) {\r\n  let res = ''\r\n  for (let j = 0; j < a.length; j++) {\r\n    if (a[j] === b[j]) {\r\n      res += a[j];\r\n    } else {\r\n      return res;\r\n    }\r\n  }\r\n  return res\r\n}\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/534/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}