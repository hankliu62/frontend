{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/554","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/554/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/554/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/554/events","html_url":"https://github.com/hankliu62/interview/issues/554","id":2141250096,"node_id":"I_kwDOLNphd85_oOIw","number":554,"title":"最小栈(155)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:04:39Z","updated_at":"2024-02-19T00:04:39Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"先看题目：\r\n\r\n设计一个支持 `push` ，`pop` ，`top` 操作，并能在常数时间内检索到最小元素的栈。\r\n\r\n- push(x) —— 将元素 x 推入栈中。\r\n- pop() —— 删除栈顶的元素。\r\n- top() —— 获取栈顶元素。\r\n- getMin() —— 检索栈中的最小元素。\r\n\r\n```\r\n示例:\r\n\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --> 返回 -3.\r\nminStack.pop();\r\nminStack.top();      --> 返回 0.\r\nminStack.getMin();   --> 返回 -2.\r\n\r\n提示：\r\n\r\npop、top 和 getMin 操作总是在 非空栈 上调用。\r\n```\r\n\r\n我们先不写getMin方法，满足其他方法实现就非常简单，我们来看一下：\r\n\r\n``` js\r\nvar MinStack = function() {\r\n    this.stack = [];\r\n};\r\n\r\nMinStack.prototype.push = function(x) {\r\n    this.stack.push(x);\r\n};\r\n\r\nMinStack.prototype.pop = function() {\r\n    this.stack.pop();\r\n};\r\n\r\nMinStack.prototype.top = function() {\r\n    return this.stack[this.stack.length - 1];\r\n};\r\n```\r\n\r\n如何保证每次取最小呢，我们举一个例子：\r\n\r\n![image](https://github.com/hankliu62/hankliu62.github.com/assets/8088864/2d4d0e39-10d3-408b-9849-fe0d035cea92)\r\n\r\n如上图，我们需要一个辅助栈来记录最小值，\r\n\r\n- 开始我们向stack push -2\r\n- 此时辅助栈minStack，因为此时stack最小的是-2，也push -2\r\n- stack push 0\r\n- 此时辅助站minStack 会用 0 跟 -2对比，-2更小，minstack会push -2\r\n- stack push -3\r\n- 此时辅助站minStack 会用 -3 跟 -2对比，-3更小，minstack会push -3\r\n\r\n所以我们取最小的时候，总能在minStack中取到最小值，所以解法就出来了：\r\n\r\n``` js\r\nvar MinStack = function() {\r\n    this.stack = [];\r\n    // 辅助栈\r\n    this.minStack = [];\r\n};\r\n\r\nMinStack.prototype.push = function(x) {\r\n    this.stack.push(x);\r\n    // 如果是第一次或者当前x比最小栈里的最小值还小才push x\r\n    if(this.minStack.length === 0 || x < this.minStack[this.minStack.length - 1]){\r\n        this.minStack.push(x)\r\n    } else {\r\n         this.minStack.push( this.minStack[this.minStack.length - 1])\r\n    }\r\n};\r\n\r\nMinStack.prototype.pop = function() {\r\n    this.stack.pop();\r\n    this.minStack.pop();\r\n};\r\n\r\nMinStack.prototype.top = function() {\r\n    return this.stack[this.stack.length - 1];\r\n};\r\n\r\nMinStack.prototype.getMin = function() {\r\n    return this.minStack[this.stack.length - 1];\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/554/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}