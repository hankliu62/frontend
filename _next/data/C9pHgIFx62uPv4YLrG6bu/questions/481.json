{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/481","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/481/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/481/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/481/events","html_url":"https://github.com/hankliu62/interview/issues/481","id":2129731598,"node_id":"I_kwDOLNphd85-8SAO","number":481,"title":"JS和WebView之间通信有哪些方式？","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468160,"node_id":"LA_kwDOLNphd88AAAABhkJvgA","url":"https://api.github.com/repos/hankliu62/interview/labels/mixture","name":"mixture","color":"AF4C82","default":false,"description":"混合开发相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-12T09:33:44Z","updated_at":"2024-02-12T09:33:45Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"内嵌到App的网页，经常需要和App原生之间通信，比如说某些活动页需要获取用户的登陆状态和登录信息。\r\n\r\n原生和JS之间通信包括JS调原生和原生调JS，作为前端同学，我们只需要管JS怎么调原生就可以了：\r\n\r\n1. URL Schema：URL Schema一般用于在网页端唤醒App，比如微信分享和微信支付功能就需要在浏览器里打开微信App。一般开发中原生小伙伴会给前端一个URL，在前端打开这个URL就可以进入App的对应页面。\r\n2. 拦截弹窗：前端调用alert()、confirm()、prompt()弹窗方法，并传递参数，原生拦截弹窗(不让弹窗弹起)，并且获取其中的参数。\r\n3. 注入对象：原生往window里注入全局的对象，里面包含原生提供给前端的接口，前端只需要调这个接口方法，就能调用原生的方法了。\r\n\r\n在项目中，通常原生Android和IOS的小伙伴会封装好一些常见的接口，比如获取用户信息等，然后会提供文档给前端调用。如果有的小伙伴的公司还没有类似的文档，那不妨考虑推动一下JSBridge文档在公司里的落地，既提升了团队之间的沟通效率，也可以作为自己的基建经验写到简历中。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/481/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}