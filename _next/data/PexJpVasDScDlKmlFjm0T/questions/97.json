{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/97","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/97/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/97/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/97/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/97","id":2124556176,"node_id":"I_kwDOBiJZIc5-oieQ","number":97,"title":"三栏弹性布局的5种方法(绝对定位、圣杯、双飞翼、flex、grid)","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6527252877,"node_id":"LA_kwDOBiJZIc8AAAABhQ35jQ","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/interview%20questions","name":"interview questions","color":"722ed1","default":false,"description":"面试题"},{"id":6536117711,"node_id":"LA_kwDOBiJZIc8AAAABhZU9zw","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/css","name":"css","color":"a0d911","default":false,"description":"面试题-CSS相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-08T07:51:12Z","updated_at":"2024-02-09T08:29:09Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"### 需求\r\n\r\n用css实现三栏布局，html结构代码如下，顺序不能变（main优先渲染），可以适当加元素，同时要求left宽度200px，right宽度300px，main宽度自适应。\r\n\r\n``` html\r\n<div class=\"container\">\r\n  <div class=\"main\">main 宽度自适应</div>\r\n  <div class=\"left\">left 宽200px</div>\r\n  <div class=\"right\">right 宽300px</div>\r\n</div>\r\n```\r\n\r\n![三栏布局](https://user-images.githubusercontent.com/8088864/125612523-d7b144ff-a0a3-4522-ad8b-c2a7179198c2.gif)\r\n\r\n### 5种具体实现和优缺点比较\r\n\r\n#### 1. 绝对定位布局\r\n\r\n原始的布局方法\r\n\r\n- 原理：container为相对定位并设置左右padding为left和right的宽度，left\\right绝对定位在左右两侧，main不用设置。\r\n\r\n- 优点：兼容好、原理简单\r\n\r\n- 缺点：left和right都为绝对定位，高度不能撑开container\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>绝对定位布局</title>\r\n</head>\r\n<style>\r\n  .container {\r\n    color: #fff;\r\n    position: relative;\r\n    padding: 0 300px 0 200px;\r\n  }\r\n\r\n  .left,\r\n  .main,\r\n  .right {\r\n    top: 0;\r\n    min-height: 100px;\r\n  }\r\n\r\n  .left {\r\n    position: absolute;\r\n    width: 200px;\r\n    background: blue;\r\n    left: 0;\r\n  }\r\n\r\n  .right {\r\n    position: absolute;\r\n    width: 300px;\r\n    background: red;\r\n    right: 0;\r\n  }\r\n\r\n  .main {\r\n    background: green;\r\n  }\r\n</style>\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"main\">main 宽度自适应</div>\r\n    <div class=\"left\">left 宽200px</div>\r\n    <div class=\"right\">right 宽300px</div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n#### 2. 圣杯布局\r\n\r\n圣杯布局方法\r\n\r\n- 原理：container设置左右padding为left和right的宽度，left\\right\\main 浮动，left\\right相对定位并设置left、right、margin-left来偏移位置，main宽100%。\r\n- 优点：兼容好\r\n- 缺点：原理复制，left/right/main高度自适应情况下3者不能高度一致。\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>圣杯布局</title>\r\n</head>\r\n<style>\r\n  .container {\r\n    color: #fff;\r\n    overflow: hidden;\r\n    padding: 0 300px 0 200px;\r\n  }\r\n\r\n  .left,\r\n  .main,\r\n  .right {\r\n    float: left;\r\n    position: relative;\r\n    min-height: 100px;\r\n  }\r\n\r\n  .left {\r\n    width: 200px;\r\n    background: blue;\r\n    margin-left: -100%;\r\n    left: -200px;\r\n  }\r\n\r\n  .right {\r\n    width: 300px;\r\n    background: red;\r\n    margin-left: -300px;\r\n    right: -300px;\r\n  }\r\n\r\n  .main {\r\n    width: 100%;\r\n    background: green;\r\n  }\r\n</style>\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"main\">main 宽度自适应</div>\r\n    <div class=\"left\">left 宽200px</div>\r\n    <div class=\"right\">right 宽300px</div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n#### 3. 双飞翼布局\r\n\r\n圣杯布局改进方法\r\n\r\n- 原理：left\\right\\main 浮动，left\\right设置margin-left来偏移位置，main宽100%，main出入content，并设置content的左右边距为left\\right宽度\r\n- 优点：兼容好，原理简单\r\n- 缺点：left/right/main高度自适应情况下3者不能高度一致。\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>双飞翼布局</title>\r\n</head>\r\n<style>\r\n  .container {\r\n    color: #fff;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .left,\r\n  .main,\r\n  .right {\r\n    float: left;\r\n    min-height: 100px;\r\n  }\r\n\r\n  .left {\r\n    width: 200px;\r\n    background: blue;\r\n    margin-left: -100%;\r\n  }\r\n\r\n  .right {\r\n    width: 300px;\r\n    background: red;\r\n    margin-left: -300px;\r\n  }\r\n\r\n  .main {\r\n    width: 100%;\r\n    background: green;\r\n  }\r\n\r\n  .content {\r\n    margin: 0 300px 0 200px;\r\n  }\r\n</style>\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"main\">\r\n      <div class=\"content\">\r\n        main 宽度自适应\r\n      </div>\r\n    </div>\r\n    <div class=\"left\">left 宽200px</div>\r\n    <div class=\"right\">right 宽300px</div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n#### 4. flex布局\r\n\r\ncss3新布局方式\r\n\r\n- 原理：container设置`display:flex`，left设置`order:-1`排在最前面，main设置`flex-grow:1`自适应宽度\r\n- 优点：原理简单，代码简洁，left/right/main高度自适应情况下3者能高度一致\r\n- 缺点：兼容性不够好，ie10+，chrome20+，正式使用要加各种前缀（-webkit--ms-）\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>flex布局</title>\r\n</head>\r\n<style>\r\n  .container {\r\n    color: #fff;\r\n    display: flex;\r\n  }\r\n\r\n  .left,\r\n  .main,\r\n  .right {\r\n    min-height: 100px;\r\n  }\r\n\r\n  .left {\r\n    order: -1;\r\n    width: 200px;\r\n    background: blue;\r\n  }\r\n\r\n  .right {\r\n    width: 300px;\r\n    background: red;\r\n  }\r\n\r\n  .main {\r\n    flex-grow: 1;\r\n    background: green;\r\n  }\r\n</style>\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"main\">main 宽度自适应</div>\r\n    <div class=\"left\">left 宽200px</div>\r\n    <div class=\"right\">right 宽300px</div>\r\n  </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n#### 5. grid布局\r\n\r\ncss3新布局方式\r\n\r\n- 原理：container设置`display:grid` 和 `grid-template-columns:200px auto 300px`，left设置`order: -1`排在最前面\r\n- 优点：原理简单，代码简洁，left/right/main高度自适应情况下3者能高度一致\r\n- 缺点：兼容性较差，ie10+，Chrome57+，正式使用要加各种前缀（-webkit--ms-）\r\n\r\n``` html\r\n<!DOCTYPE html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>grid布局</title>\r\n</head>\r\n<style>\r\n  .container {\r\n    color: #fff;\r\n    display: grid;\r\n    grid-template-columns: 200px auto 300px;\r\n  }\r\n\r\n  .left,\r\n  .main,\r\n  .right {\r\n    min-height: 100px;\r\n  }\r\n\r\n  .left {\r\n    order: -1;\r\n    background: blue;\r\n  }\r\n\r\n  .right {\r\n    background: red;\r\n  }\r\n\r\n  .main {\r\n    background: green;\r\n  }\r\n</style>\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"main\">main 宽度自适应</div>\r\n    <div class=\"left\">left 宽200px</div>\r\n    <div class=\"right\">right 宽300px</div>\r\n  </div>\r\n</body>\r\n</html>\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/97/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/97/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### 需求","### 5种具体实现和优缺点比较","#### 1. 绝对定位布局","#### 2. 圣杯布局","#### 3. 双飞翼布局","#### 4. flex布局","#### 5. grid布局"]},"__N_SSG":true}