{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/532","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/532/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/532/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/532/events","html_url":"https://github.com/hankliu62/interview/issues/532","id":2141248508,"node_id":"I_kwDOLNphd85_oNv8","number":532,"title":"两数组交集","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6578481463,"node_id":"LA_kwDOLNphd88AAAABiBupNw","url":"https://api.github.com/repos/hankliu62/interview/labels/leetcode","name":"leetcode","color":"7F3AE3","default":false,"description":"Leetcode相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2024-02-19T00:01:29Z","updated_at":"2024-02-19T00:01:29Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"题目如下：给定两个数组，编写一个函数来计算它们的交集。\r\n\r\n```\r\n示例 1：\r\n\r\n输入：nums1 = [1,2,2,1], nums2 = [2,2]\r\n输出：[2]\r\n示例 2：\r\n\r\n输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]\r\n输出：[9,4]\r\n\r\n说明：\r\n\r\n输出结果中的每个元素一定是唯一的。\r\n我们可以不考虑输出结果的顺序。\r\n```\r\n\r\n这道题可以用set，很简单,但是空间复杂度和时间复杂度都太高，不太优雅\r\n\r\n``` js\r\nvar intersection = function (nums1, nums2) {\r\n    return result =[...new Set(nums1)].filter(item=>new Set(nums2).has(item))\r\n};\r\n```\r\n\r\n我们可以用map来做，时间和空间复杂度都低很多 思路：\r\n\r\n用一个map去存nums1数组里的每一项，类似`map[nums1[i]] = true`\r\n然后去遍历nums2，如果在map中已经有的值，类似`map[nums2[i]]`, 就把它push到一个数组里\r\n并且将`map[nums2[i]]`设为`false`，后面有相同的值就不push到数组了\r\n\r\n``` js\r\nvar intersection = function(nums1, nums2) {\r\n    const map = {};\r\n    const ret = [];\r\n    for(let i = 0; i < nums1.length; i++){\r\n        map[nums1[i]] = true;\r\n    }\r\n    for(let i = 0; i < nums2.length; i++){\r\n        if(map[nums2[i]]){\r\n            ret.push(nums2[i])\r\n            map[nums2[i]] = false\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n```","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/532/timeline","performed_via_github_app":null,"state_reason":null},"menus":[]},"__N_SSG":true}