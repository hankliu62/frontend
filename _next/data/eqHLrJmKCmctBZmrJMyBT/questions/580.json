{"pageProps":{"issue":{"url":"https://api.github.com/repos/hankliu62/interview/issues/580","repository_url":"https://api.github.com/repos/hankliu62/interview","labels_url":"https://api.github.com/repos/hankliu62/interview/issues/580/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/interview/issues/580/comments","events_url":"https://api.github.com/repos/hankliu62/interview/issues/580/events","html_url":"https://github.com/hankliu62/interview/issues/580","id":2217272282,"node_id":"I_kwDOLNphd86EKOPa","number":580,"title":"React 为什么要废弃 componentWillMount、componentWillReceiveProps、componentWillUpdate 这三个生命周期钩子？它们有哪些问题呢？React 又是如何解决的呢？","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":6547468371,"node_id":"LA_kwDOLNphd88AAAABhkJwUw","url":"https://api.github.com/repos/hankliu62/interview/labels/react","name":"react","color":"0052CC","default":false,"description":"React相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/hankliu62/interview/milestones/3","html_url":"https://github.com/hankliu62/interview/milestone/3","labels_url":"https://api.github.com/repos/hankliu62/interview/milestones/3/labels","id":10707686,"node_id":"MI_kwDOLNphd84Ao2Lm","number":3,"title":"3","description":"描述问题难度，难度3🌟","creator":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"open_issues":3,"closed_issues":0,"state":"open","created_at":"2024-03-20T03:36:24Z","updated_at":"2024-04-09T00:44:51Z","due_on":null,"closed_at":null},"comments":0,"created_at":"2024-04-01T00:28:13Z","updated_at":"2024-04-01T00:28:14Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"\r\n### 废弃版本\r\n\r\nReact 在 16.3 版本中：\r\n\r\n- 将 `componentWillMount`、`componentWillReceiveProps`、`componentWillUpdate` 三个生命周期钩子加上了 `UNSAFE` 前缀，变为 `UNSAFE_componentWillMount`、`UNSAFE_componentWillReceiveProps` 和 `UNSAFE_componentWillUpdate`。\r\n- 并引入了一个新的生命周期钩子：`getDerivedStateFromProps`。\r\n\r\n并在 17.0 以及之后的版本中：\r\n\r\n- 删除了 `componentWillMount`、`componentWillReceiveProps`、`componentWillUpdate` 这三个生命周期钩子。\r\n- 不过 `UNSAFE_componentWillMount`、`UNSAFE_componentWillReceiveProps` 和 `UNSAFE_componentWillUpdate` 还是可以用的。\r\n\r\n### 废弃原因\r\n\r\n我们知道 `React` 的更新流程分为：`render` 阶段和 `commit` 阶段。\r\n\r\n`componentWillMount`、`componentWillReceiveProps`、`componentWillUpdate` 这三个生命周期钩子都是在 `render` 阶段执行的。\r\n\r\n在 `fiber` 架构被应用之前，`render` 阶段是不能被打断的。当页面逐渐复杂之后，就有可能会阻塞页面的渲染，于是 `React` 推出了 `fiber` 架构。在应用 `fiber` 架构之后，低优先级任务的 `render` 阶段可以被高优先级任务打断。\r\n\r\n而这导致的问题就是：**在 render 阶段执行的生命周期函数可能被执行多次。**\r\n\r\n`componentWillMount`、`componentWillReceiveProps`、`componentWillUpdate` 这三个生命周期钩子，如果我们在其中执行一些具有副作用的操作，例如发送网络请求，就有可能导致一个同样的网络请求被执行多次，这显然不是我们想看到的。\r\n\r\n### 替换方案\r\n\r\n而 `React` 又没法强迫开发者不去这样做，因为怎么样使用 `React` 是开发者的自由，所以 `React` 就新增了一个静态的生命周期 `getDerivedStateFromProps`，来解决这个问题。\r\n\r\n用一个静态函数 `getDerivedStateFromProps` 来取代被废弃的几个生命周期函数，这样开发者就无法通过 `this` 获取到组件的实例，也不能发送网络请求以及调用 `this.setState`。它就是强制开发者在 `render` 之前只做无副作用的操作，间接强制我们无法进行这些不合理不规范的操作，从而避免对生命周期的滥用。","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/interview/issues/580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/interview/issues/580/timeline","performed_via_github_app":null,"state_reason":null},"menus":["### 废弃版本","### 废弃原因","### 替换方案"]},"__N_SSG":true}