{"pageProps":{"article":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/56","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/56/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/56/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/56/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/56","id":1043177198,"node_id":"I_kwDOBiJZIc4-LZ7u","number":56,"title":"Mac Fish","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":688950687,"node_id":"MDU6TGFiZWw2ODg5NTA2ODc=","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/blog","name":"blog","color":"1677ff","default":false,"description":"博客文章"},{"id":6795289565,"node_id":"LA_kwDOBiJZIc8AAAABlQfj3Q","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/toolkit","name":"toolkit","color":"99FA4D","default":false,"description":"开发、系统工具箱相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-11-03T07:54:04Z","updated_at":"2024-04-08T05:23:15Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"# Mac Fish使用\r\n\r\n## 安装 fish\r\n\r\n``` shell\r\nbrew install fish\r\n```\r\n\r\n## 修改`/etc/shells`文件\r\n\r\n``` shell\r\nsudo vi /etc/shells\r\n```\r\n\r\n添加`/usr/local/bin/fish`\r\n\r\n【我的文件，包含zsh、fish】\r\n```\r\n/bin/bash\r\n/bin/csh\r\n/bin/ksh\r\n/bin/sh\r\n/bin/tcsh\r\n/bin/zsh\r\n/usr/local/bin/fish\r\n```\r\n\r\n## 修改默认的shell\r\n\r\n``` shell\r\nsudo -u [用户名] chsh -s /usr/local/bin/fish\r\n```\r\n\r\n## Fish 配置主题\r\n``` shell\r\nfish_config\r\n```\r\n\r\n## Fish 中使用 nvm\r\n\r\n**问题描述：** nvm 主要用于 Node 版本控制，macOS 系统下，在 zsh 或 bash 终端，使用 Homebrew 下载，一般都能正常使用，但是切换到 fish 终端就会无法找到此命令。\r\n\r\n**主要原因： **fish 环境下无法识别 nvm shell 命令，比如 Gihub issues：[NVM in fish](https://github.com/nvm-sh/nvm/issues/303):\r\n\r\n>> May I request that this issue be reformatted in the form of a bug?\r\n>> …\r\n>> NVM does not install if you use the fish shell.\r\n>> NVM does not work in the fish shell shell shell if previously installed in the bash shell. In fact, nvm > isn’t even in the path.\r\n\r\n### 解决办法\r\n\r\n在刚刚 [Github Issues](https://github.com/nvm-sh/nvm/issues/303#issuecomment-121086278) 下就有解决方案：\r\n\r\n>> I also wrote a general wrapper to bring almost any bash utility to fish shell: https://github.com/edc/bass. It works flawlessly with nvm using syntax like bass source ~/.nvm/nvm.sh \\; nvm --version. For convenience, one can create an alias Fish function:\r\n\r\n``` shell\r\nfunction nvm\r\n      bass source ~/.nvm/nvm.sh ';' nvm $argv\r\nend\r\n\r\n# and then just use nvm --version, nvm ls, etc.\r\n```\r\n\r\n### 动手实践\r\n\r\n#### 第一步 下载 oh-my-fish\r\n\r\n>> Oh My Fish provides core infrastructure to allow you to install packages which extend or modify the look of your shell. It’s fast, extensible and easy to use.\r\n\r\n默认设置安装：\r\n\r\n``` shell\r\ncurl -L https://get.oh-my.fish | fish\r\n```\r\n\r\n检测：\r\n\r\n``` shell\r\nomf -v\r\nOh My Fish version 7\r\n```\r\n\r\n或者可以自定义安装：\r\n\r\n``` shell\r\ncurl -L https://get.oh-my.fish > install\r\nfish install --path=~/.local/share/omf --config=~/.config/omf\r\n```\r\n\r\n关于使用 curl，这里可能会报错：\r\n\r\n``` shell\r\nFailed to connect to raw.githubusercontent.com port 443: Connection refused\r\n```\r\n\r\n说得也很明白，就是请求被拒绝访问，那我们怎么办？问度娘！咔咔咔，一段萌操作…之后：\r\n\r\n访问[ipaddress.com](https://websites.ipaddress.com/raw.githubusercontent.com)，获取 `raw.githubusercontent.com` 域名真实 IP，然后在本地 hosts 文件添加即可：\r\n\r\n``` shell\r\nsudo vim /etc/hosts\r\n```\r\n\r\n添加如下内容，并保存退出：\r\n\r\n``` shell\r\n199.232.28.133 raw.githubusercontent.com\r\n```\r\n\r\n#### 第二步 下载 Bass\r\n\r\n官网介绍：Bass makes it easy to use utilities written for Bash in fish shell.\r\n\r\n下载好 oh-my-fish，直接下载 bass:\r\n\r\n``` shell\r\nomf install bass\r\n```\r\n\r\n当然，也可以使用官网提到的 fisher、Fundle 等包管理器。\r\n\r\n#### 第三步 配置 nvm\r\n\r\n前提是你已经下载好了 nvm，比如我使用 Homebrew 安装：\r\n\r\n``` shell\r\nbrew install nvm\r\n```\r\n\r\n然后，安装完成会有一堆提示，如一下关键信息：\r\n\r\n``` shell\r\nYou should create NVM's working directory if it doesn't exist:\r\n\r\n  mkdir ~/.nvm\r\n\r\nAdd the following to ~/.config/fish/config.fish or your desired shell\r\nconfiguration file:\r\n\r\n  export NVM_DIR=\"$HOME/.nvm\"\r\n  [ -s \"/usr/local/opt/nvm/nvm.sh\" ] && . \"/usr/local/opt/nvm/nvm.sh\"  # This loads nvm\r\n  [ -s \"/usr/local/opt/nvm/etc/bash_completion.d/nvm\" ] && . \"/usr/local/opt/nvm/etc/bash_completion.d/nvm\"  # This loads nvm bash_completion\r\n\r\nYou can set $NVM_DIR to any location, but leaving it unchanged from\r\n/usr/local/opt/nvm will destroy any nvm-installed Node installations\r\nupon upgrade/reinstall.\r\n```\r\n\r\n根据提示进入如下目录，并创建 config.fish 文件：\r\n\r\n``` shell\r\ncd ~/.config/fish/\r\ntouch config.fish\r\n```\r\n\r\nconfig.fish添加如下配置：\r\n\r\n``` shell\r\nfunction nvm\r\n    bass source /opt/homebrew/opt/nvm/nvm.sh ';' nvm $argv\r\nend\r\n```\r\n\r\n激活配置：\r\n\r\n``` shell\r\nsource ~/.config/fish/config.fish\r\n```\r\n\r\n最后检测：\r\n``` shell\r\nnvm --version\r\n0.35.3\r\n```\r\n\r\n如果你是全局安装 nvm，比如使用 curl 或者 wget，config.fish应该是：\r\n\r\n``` shell\r\nfunction nvm\r\n      bass source ~/.nvm/nvm.sh ';' nvm $argv\r\n  end\r\n```\r\n\r\n主要是 nvm.sh 文件的路径问题是否存在！\r\n\r\n大功告成，打完收工！\r\n\r\n## Fish 中使用 brew\r\n\r\n**主要原因： **fish 环境下无法识别 brew shell 命令。\r\n\r\n根据提示进入如下目录，并创建 config.fish 文件：\r\n\r\n``` shell\r\ncd ~/.config/fish/\r\ntouch config.fish\r\n```\r\n\r\nconfig.fish添加如下配置：\r\n\r\n``` shell\r\nfunction brew\r\n    /opt/homebrew/bin/brew $argv\r\nend\r\n```\r\n\r\n激活配置：\r\n\r\n``` shell\r\nsource ~/.config/fish/config.fish\r\n```\r\n\r\n## iterm2新开tab为`fish shell`\r\n\r\n![image](https://user-images.githubusercontent.com/8088864/140038972-1bd5b83b-7ff7-4b00-829f-941f8e29309d.png)\r\n\r\n\r\n\r\n\r\n","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/56/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/56/timeline","performed_via_github_app":null,"state_reason":null},"menus":["## 安装 fish","## 修改`/etc/shells`文件","## 修改默认的shell","## Fish 配置主题","## Fish 中使用 nvm","### 解决办法","### 动手实践","#### 第一步 下载 oh-my-fish","#### 第二步 下载 Bass","#### 第三步 配置 nvm","## Fish 中使用 brew","## iterm2新开tab为`fish shell`"]},"__N_SSG":true}