{"pageProps":{"article":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/61","repository_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com","labels_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/61/comments","events_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/61/events","html_url":"https://github.com/hankliu62/hankliu62.github.com/issues/61","id":1160372766,"node_id":"I_kwDOBiJZIc5FKeIe","number":61,"title":"css3 animation沿椭圆轨道旋转运动","user":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"labels":[{"id":688950687,"node_id":"MDU6TGFiZWw2ODg5NTA2ODc=","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/blog","name":"blog","color":"1677ff","default":false,"description":"博客文章"},{"id":6536117711,"node_id":"LA_kwDOBiJZIc8AAAABhZU9zw","url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/labels/css","name":"css","color":"a0d911","default":false,"description":"分类-CSS相关"}],"state":"open","locked":false,"assignee":{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false},"assignees":[{"login":"hankliu62","id":8088864,"node_id":"MDQ6VXNlcjgwODg4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/8088864?v=4","gravatar_id":"","url":"https://api.github.com/users/hankliu62","html_url":"https://github.com/hankliu62","followers_url":"https://api.github.com/users/hankliu62/followers","following_url":"https://api.github.com/users/hankliu62/following{/other_user}","gists_url":"https://api.github.com/users/hankliu62/gists{/gist_id}","starred_url":"https://api.github.com/users/hankliu62/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hankliu62/subscriptions","organizations_url":"https://api.github.com/users/hankliu62/orgs","repos_url":"https://api.github.com/users/hankliu62/repos","events_url":"https://api.github.com/users/hankliu62/events{/privacy}","received_events_url":"https://api.github.com/users/hankliu62/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2022-03-05T15:01:50Z","updated_at":"2024-04-08T05:20:44Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"## 一些废话：\r\n\r\n很久没有更博了，主要原因是由于使用git工具push的时候，自己的私人账号和工作的git账号总是冲突，每次明明切换过了账号，可是push的时候却用的是错误的账号，找不到解决办法。最近得知github有桌面版，终于不会再冲突了！\r\n\r\n## 前言\r\n\r\n最近工作上遇到一个项目有两张banner，都需要实现围绕椭圆旋转的动画效果。\r\n![image](https://user-images.githubusercontent.com/8088864/156888539-ebaa1778-1734-4aef-9b76-3b861bdcab7f.png)\r\n![image](https://user-images.githubusercontent.com/8088864/156888552-d76311b2-5dd3-473f-ad32-f293c0b3a0dd.png)\r\n\r\n\r\n\r\n\r\n拿到这个需求，第一反应是用animation应该很容易实现。脑袋里的思路是，先实现沿正圆运动，再进行3D旋转即可。然而，我得到的效果是：\r\n``` html\r\n<html lang=\"en\"><head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Document</title>\r\n    <style>\r\n        *{\r\n            padding: 0;\r\n            margin: 0;\r\n        }\r\n        .wrap{\r\n            padding: 0 20px;\r\n            margin-top: -80px;\r\n            height: 320px;\r\n        }\r\n        .box{\r\n            width: 400px;\r\n            height: 400px;\r\n            border: 1px solid #333;\r\n            border-radius: 100%;\r\n            position: relative;\r\n            box-sizing: border-box;\r\n            transform: rotateX(60deg);\r\n        }\r\n        .dot{\r\n            width: 20px;\r\n            height: 20px;\r\n            background: red;\r\n            border-radius: 100%;\r\n            position: absolute;\r\n            left: 200px;\r\n            top: -10px;\r\n            transform-origin: 0 210px;\r\n            animation: move 8s linear infinite;\r\n        }\r\n        @keyframes move{\r\n            0%{ transform: rotate(0deg); }\r\n            100%{ transform: rotate(360deg); }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"wrap\">\r\n        <div class=\"box\">\r\n            <div class=\"dot\"></div>\r\n        </div>\r\n    </div>\r\n\r\n</body></html>\r\n```\r\n\r\n吐血的小圆球。。。是平面的，进行了3D旋转，看上去就是椭圆了！\r\n\r\n## 踩过的坑\r\n思考了许久找不到解决办法，于是只好google啦，然后我就找到了这个案例 https://codepen.io/yincheng/pen/QjMzZr ，本以为是惊喜，结果是“厄运”，因为花费了很多时间去研究却最终弃用。使用案例中的代码，若圆球较大看似没什么问题，但是当圆球很小的时候怎么都对不准轨道。。。\r\n这个案例的原理是[CSS分层动画可以让元素沿弧形路径运动](http://jinlong.github.io/2016/01/14/moving-along-a-curved-path-in-css-with-layered-animation/)[](https://yddmgirl.github.io/2017/08/09/animation%E6%B2%BF%E6%A4%AD%E5%9C%86%E8%BD%A8%E9%81%93%E8%BF%90%E5%8A%A8/#%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95)，然而如果想要围绕标准的椭圆运动，需要调整动画的贝塞尔曲线，好像是需要通过公式计算，而且每个轨道的椭圆都不同，这种方法的难度和工作量似乎有点大，我只好放弃。\r\n\r\n## 解决办法\r\n后来我又搜到了一个案例： https://codepen.io/ghost028/pen/bEBKXZ ，这个案例跟我最初想到的思路差不多，不过小圆球在运动的过程中也要不断进行3D旋转，就能让它视觉上一直都是一个圆。效果还是很不错的：\r\n``` html\r\n<html lang=\"en\"><head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Document</title>\r\n    <style>\r\n        .ellipse {\r\n            width: 160px;\r\n            height: 160px;\r\n            border-radius: 50%;\r\n            position: absolute;\r\n            border: 2px #555 solid;\r\n            transform-style: preserve-3d;\r\n            transform: rotateZ(60deg) rotateY(70deg);\r\n        }\r\n        .ellipse .circle {\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 50%;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            margin: auto;\r\n            position: absolute;\r\n            background: #555;\r\n            animation: move 10s linear infinite;\r\n        }\r\n\r\n        .ellipse .circle2{\r\n            animation: move2 10s linear infinite;\r\n        }\r\n        .ellipse .circle3{\r\n            animation: move3 10s linear infinite;\r\n        }\r\n        .ellipse .circle4{\r\n            animation: move4 10s linear infinite;\r\n        }\r\n\r\n        @keyframes move {\r\n            from {\r\n                transform: rotateZ(0) translateX(80px) rotateZ(0) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(360deg) translateX(80px) rotateZ(-360deg) rotateY(-70deg);\r\n            }\r\n        }\r\n        @keyframes move2 {\r\n            from {\r\n                transform: rotateZ(-180deg) translateX(80px) rotateZ(180deg) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(180deg) translateX(80px) rotateZ(-180deg) rotateY(-70deg);\r\n            }\r\n        }\r\n        @keyframes move3 {\r\n            from {\r\n                transform: rotateZ(-90deg) translateX(80px) rotateZ(90deg) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(270deg) translateX(80px) rotateZ(-270deg) rotateY(-70deg);\r\n            }\r\n        }\r\n        @keyframes move4 {\r\n            from {\r\n                transform: rotateZ(-270deg) translateX(80px) rotateZ(270deg) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(90deg) translateX(80px) rotateZ(-90deg) rotateY(-70deg);\r\n            }\r\n        }\r\n\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"ellipse\">\r\n        <div class=\"circle circle1\"></div>\r\n        <div class=\"circle circle2\"></div>\r\n        <div class=\"circle circle3\"></div>\r\n        <div class=\"circle circle4\"></div>\r\n    </div>\r\n\r\n</body></html>\r\n```\r\n\r\n## 问题延伸\r\n所以第一张banner就用此方法完美解决，当我准备用这个方法做第二张banner的时候，我突然发现了一些问题。\r\n在上一张banner中，要旋转的元素是和轨道我用的是同一个颜色，如果不是同样的颜色呢？我们会发现，轨道其实是”插入“圆形里面的。\r\n\r\n``` html\r\n<html lang=\"en\"><head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Document</title>\r\n    <style>\r\n        .ellipse {\r\n            width: 160px;\r\n            height: 160px;\r\n            border-radius: 50%;\r\n            position: absolute;\r\n            border: 2px #555 solid;\r\n            transform-style: preserve-3d;\r\n            transform: rotateZ(60deg) rotateY(70deg);\r\n        }\r\n        .ellipse .circle {\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 50%;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            margin: auto;\r\n            position: absolute;\r\n            background: red;\r\n            animation: move 10s linear infinite;\r\n            font-size: 12px;\r\n            color: #fff;\r\n            text-align: center;\r\n            line-height: 20px;\r\n        }\r\n        .ellipse .circle span{\r\n            display: block;\r\n            transform: rotateZ(-60deg);  /* 再次旋转 */\r\n        }\r\n\r\n        .ellipse .circle2{\r\n            animation: move2 10s linear infinite;\r\n        }\r\n        .ellipse .circle3{\r\n            animation: move3 10s linear infinite;\r\n        }\r\n        .ellipse .circle4{\r\n            animation: move4 10s linear infinite;\r\n        }\r\n\r\n        @keyframes move {\r\n            from {\r\n                transform: rotateZ(0) translateX(80px) rotateZ(0) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(360deg) translateX(80px) rotateZ(-360deg) rotateY(-70deg);\r\n            }\r\n        }\r\n        @keyframes move2 {\r\n            from {\r\n                transform: rotateZ(-180deg) translateX(80px) rotateZ(180deg) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(180deg) translateX(80px) rotateZ(-180deg) rotateY(-70deg);\r\n            }\r\n        }\r\n        @keyframes move3 {\r\n            from {\r\n                transform: rotateZ(-90deg) translateX(80px) rotateZ(90deg) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(270deg) translateX(80px) rotateZ(-270deg) rotateY(-70deg);\r\n            }\r\n        }\r\n        @keyframes move4 {\r\n            from {\r\n                transform: rotateZ(-270deg) translateX(80px) rotateZ(270deg) rotateY(-70deg);\r\n            }\r\n            to {\r\n                transform: rotateZ(90deg) translateX(80px) rotateZ(-90deg) rotateY(-70deg);\r\n            }\r\n        }\r\n\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"ellipse\">\r\n        <div class=\"circle circle1\"><span>一</span></div>\r\n        <div class=\"circle circle2\"><span>丢</span></div>\r\n        <div class=\"circle circle3\"><span>丢</span></div>\r\n        <div class=\"circle circle4\"><span>萌</span></div>\r\n    </div>\r\n\r\n</body></html>\r\n```\r\n\r\n虽然在这个项目中，第二张banner的轨道可以忽略，两张banner都可以用上面的解决办法，但是我并不甘心。\r\n\r\n为什么不可以直接让元素沿着一条轨道运动呢？我能否“绘制”一个椭圆的N个坐标，让元素沿着这些坐标运动？先从最简化的开始，假如椭圆只有四个坐标，小圆球沿着这四个坐标运动，就是下面这样：\r\n\r\n\r\n那么以此类推，把坐标的数量不断增加，小圆球沿轨道运动就会越来越精细。要获得椭圆坐标，需要用到数学公式。\r\n高中数学已经基本忘光了o(╯□╰)o，我在网上找到了椭圆的坐标公式：\r\n\r\nx=a*cosr\r\ny=b*sinr\r\n\r\n已知椭圆的长半径a和短半径b，可以根据角度r来得到椭圆轨道的x坐标和y坐标。\r\n![image](https://user-images.githubusercontent.com/8088864/156888622-7918275a-d121-4e03-ad75-1760ed91b05b.png)\r\n\r\n\r\n\r\n如果用css来断点，数量过多，非常麻烦，所以用less就方便了很多，以下是重点代码：\r\n\r\n``` html\r\n<div class=\"ellips\">\r\n  <div class=\"dot\"></div>\r\n</div>\r\n```\r\n\r\n``` less\r\n@a : 88px;  // 椭圆x轴半径(长半径)\r\n@b : 32px;  // 椭圆y轴半径(短半径)\r\n@s : 40;  // 坐标点的数目(数目越大，动画越精细)\r\n\r\n.ellips{\r\n    width: @a*2 ;\r\n    height: @b*2;\r\n    border-radius: 100%;\r\n    border: 2px solid #333;\r\n    position: relative;\r\n}\r\n.dot{\r\n    width: 10px;\r\n    height: 10px;\r\n    left: @a - 5px;\r\n    top: @b - 5px;\r\n    background: red;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    animation: move 10s linear infinite;\r\n}\r\n\r\n.loop(@index) when (@index < @s+1) {\r\n    .loop((@index + 1));\r\n    @keyframeSel: @index * 100%/@s;\r\n    @{keyframeSel}{ transform: translate(@a*cos(360deg/@s*@index),@b*sin(360deg/@s*@index),);}\r\n}\r\n\r\n@keyframes move{\r\n    .loop(0);\r\n}\r\n```\r\n\r\n## 沿圆形轨道旋转运动\r\n``` html\r\n<div class=\"box\">\r\n\t\t<i><span></span></i>\r\n\t</div>\r\n```\r\n``` css\r\n*{\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t\t.box{     \r\n\t\t\tposition: relative;\r\n\t\t\twidth: 300px;\r\n\t\t\theight: 300px;\r\n\t\t\tborder: 5px solid deepskyblue;\r\n\t\t\tborder-radius: 50%;\r\n      // transform: rotate(-6deg) skew(20deg);\r\n\t\t}\r\n\t\t.box i{\r\n\t\t\tdisplay: block;\r\n\t\t\twidth: 300px;\r\n\t\t\theight: 300px;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: -10px;\r\n\t\t\ttop: -10px;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tborder: 10px solid transparent;\r\n\t\t\t/*旋转*/\r\n\t\t\tanimation: circleRoate 10s ;\r\n\t\t\tanimation-timing-function:linear;\r\n\t\t\t\r\n\t\t}\r\n\t\t.box i span{\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 50%;\r\n\t\t\ttop: -6px;\r\n\t\t\twidth: 10px;\r\n\t\t\theight: 10px;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tbackground: dodgerblue;\r\n\t\t}\r\n\t\t@keyframes circleRoate{\r\n\t\t\tfrom{transform: rotate(0deg) infinite;}\r\n\t\t\tto{transform: rotate(360deg);}\r\n\t\t}\r\n```\r\n\r\nhttps://codepen.io/yaowei9363/pen/PyXvNe\r\n\r\n参考资料：\r\nhttps://stackoverflow.com/questions/38404204/how-to-iterate-keyframe-percentages-less-css\r\nhttp://tobiasahlin.com/blog/curved-path-animations-in-css/\r\n\r\n\r\n摘自:\r\nhttps://yddmgirl.github.io/2017/08/09/animation%E6%B2%BF%E6%A4%AD%E5%9C%86%E8%BD%A8%E9%81%93%E8%BF%90%E5%8A%A8/","closed_by":null,"reactions":{"url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/61/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/hankliu62/hankliu62.github.com/issues/61/timeline","performed_via_github_app":null,"state_reason":null},"menus":["## 一些废话：","## 前言","## 踩过的坑","## 解决办法","## 问题延伸","## 沿圆形轨道旋转运动"]},"__N_SSG":true}